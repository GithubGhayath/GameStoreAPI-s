// <auto-generated />
using System;
using GameStoreApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStoreApi.Data.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20250316035645_SeedGeners")]
    partial class SeedGeners
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("GameStoreApi.Entities.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GenerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenereID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleasDate")
                        .HasColumnType("TEXT");

                    b.HasKey("GameID");

                    b.HasIndex("GenerID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameStoreApi.Entities.Gener", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Geners");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Fighting"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Roleplaying"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Sports"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Racing"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Kids and Family"
                        });
                });

            modelBuilder.Entity("GameStoreApi.Entities.Game", b =>
                {
                    b.HasOne("GameStoreApi.Entities.Gener", "Gener")
                        .WithMany()
                        .HasForeignKey("GenerID");

                    b.Navigation("Gener");
                });
#pragma warning restore 612, 618
        }
    }
}
